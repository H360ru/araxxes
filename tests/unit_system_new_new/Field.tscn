[gd_scene load_steps=8 format=2]

[ext_resource path="res://tests/hex_grid/tileset_horizontal.tres" type="TileSet" id=1]
[ext_resource path="res://modules/navigation_grid.gd" type="Script" id=2]
[ext_resource path="res://modules/UnitSystem/units_group.gd" type="Script" id=3]
[ext_resource path="res://modules/UnitSystem/player.gd" type="Script" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

export(NodePath) var grid_path
export(NodePath) var player_path
export(NodePath) var units_path
export(NodePath) var control_path

onready var grid = get_node_or_null(grid_path)
onready var player = get_node_or_null(player_path)
onready var units = get_node_or_null(units_path)
onready var control = get_node_or_null(control_path)

func _process(delta):
	update()
	
func _draw():
	if player != null and player.unit != null:
		draw_circle(player.unit.global_position-global_position, 25.0, Color(0.0, 1.0, 0.0, 0.3))
		
	for i in units.get_units_in_group(control.player_group):
		draw_circle(to_local(grid.get_cell_center_global(i.map_position)), 15.0, Color.green if i.is_active() else Color.black)
		
	for i in units.get_units_in_group(control.enemy_group):
		draw_circle(to_local(grid.get_cell_center_global(i.map_position)), 15.0, Color.red if i.is_active() else Color.black)
		
	match control.state:
		control.States.READY:
			if player.get_unit_path_point_count() > 0:
				draw_polyline(player.get_baked_path_points(), Color.green, 2.0, true)
			for i in control.move_area:
				draw_circle(grid.get_cell_center_global(i), 10.0, Color(0.0, 1.0, 0.0, 0.3))
		control.States.TARGETING:
			draw_line(player.unit.global_position, player.get_visible_aim(), Color.red, 2.0, true)
			draw_circle(grid.get_cell_center_global(player.get_aimed_cell()), 10.0, Color.red)
"

[sub_resource type="GDScript" id=2]
script/source = "extends Node

var robot:PackedScene = preload(\"res://tests/unit_system_new_new/Unit1.tscn\")

onready var units:UnitsGroup = $\"../Units\"
onready var grid:NavigationGrid = $\"../Grid\"
onready var player:Player = $\"../Player\"

const player_group = \"team\"
const enemy_group = \"enemies\"

enum States{
	WAIT_PLAYER,
	READY,
	TARGETING,
	
}

var state:int
var current_group = player_group
var move_area:PoolVector2Array = PoolVector2Array()

func SReady():
	state = States.READY
	if player != null and player.unit != null:
		move_area = grid.get_map_distance_area(player.unit.map_position, player.unit.action_points, units.get_surrounding_units_cells(player.unit))
	
func SWaitPlayer():
	state = States.WAIT_PLAYER
	
func STargeting():
	state = States.TARGETING

func _ready():
	SReady()

func _process(delta):
	var mouse_cell = grid.global_world_to_map(grid.get_global_mouse_position())
	match state:
		States.READY:
			if Input.is_action_just_pressed(\"mouse_left\"):
				var unit = units.get_unit_on_cell(mouse_cell)
				if unit and unit.is_in_group(current_group) and unit.is_active():
					player.unit = unit
					move_area = grid.get_map_distance_area(player.unit.map_position, player.unit.action_points, units.get_surrounding_units_cells(player.unit))
					
				elif player.unit != null:
					if mouse_cell in move_area:
						player.clear_unit_path()
						var path = grid.find_pixel_path(player.unit.map_position, mouse_cell, units.get_surrounding_units_cells(player.unit), true)
						for i in path:
							player.add_unit_path_point(i)
				
			if Input.is_action_just_pressed(\"mouse_right\"):
				if player.unit.can_shoot():
					STargeting()
				else:
					print(\"Not enough action points to shoot\")
			
			if Input.is_action_just_pressed(\"ui_left\"):
				player.unit.disable()
				player.clear_settings()
				
			if Input.is_action_just_pressed(\"ui_right\"):
				for i in units.get_all_units():
					i.enable()
			
			if Input.is_action_just_pressed(\"ui_select\"):
				if player.unit != null and player.can_move():
					player.go_path()
					player.unit.act(max(player.get_unit_path_point_count()-1, 0))
					SWaitPlayer()
			
			if Input.is_action_just_pressed(\"ui_focus_next\"):
				current_group = player_group if current_group == enemy_group else enemy_group
				player.clear_settings()
				move_area = PoolVector2Array()

		States.TARGETING:
			var p = grid.get_obstacle_intersection(player.unit.map_position, mouse_cell, units.get_surrounding_units_cells(player.unit), true, 5)
			
			var c = grid.get_map_obstacle_intersection(player.unit.map_position, mouse_cell, units.get_surrounding_units_cells(player.unit))
			
			if grid.get_map_distance(player.unit.map_position, mouse_cell) <= player.unit.weapon.shoot_distance:
				player.aim_to_cell(c)
				player.set_visible_aim(p)
			
			# test only #######
			player.unit.sprite.direct_by_rad((p-player.unit.global_position).angle())
			###################
			
			if Input.is_action_just_pressed(\"ui_select\"):
				player.attack()
				SWaitPlayer()
				
			if Input.is_action_just_pressed(\"mouse_right\"):
				SReady()

func _on_Player_move_finished():
	SReady()

func _on_Player_unit_attacked():
	units.damage_unit_at_cell(player.get_aimed_cell(), player.unit.weapon.damage)
	player.unit.act(player.unit.weapon.shoot_action_cost)
	SReady()

func _on_Field_ready():
	units.create_unit(robot, Vector2(3, 3), player_group)
	units.create_unit(robot, Vector2(9, 6), player_group)
	units.create_unit(robot, Vector2(3, 9), enemy_group)

func _on_Units_unit_out_of_health(unit):
	units.destroy_unit(unit)
"

[sub_resource type="GDScript" id=3]
script/source = "extends Camera2D


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.


func _process(delta):
	if Input.is_action_pressed(\"A\"):
		position.x -= 200*delta
	if Input.is_action_pressed(\"D\"):
		position.x += 200*delta
	if Input.is_action_pressed(\"W\"):
		position.y -= 200*delta
	if Input.is_action_pressed(\"S\"):
		position.y += 200*delta
		
	if Input.is_action_just_released(\"mouse_wheel_down\"):
		if zoom.x <= 3:
			zoom *= 1.1
			
	if Input.is_action_just_released(\"mouse_wheel_up\"):
		if zoom.x >= 0.3:
			zoom /= 1.1
"

[node name="Field" type="Node"]

[node name="Grid" type="TileMap" parent="."]
position = Vector2( -318.725, -116.188 )
tile_set = ExtResource( 1 )
cell_size = Vector2( 120, 103 )
cell_half_offset = 0
cell_tile_origin = 1
centered_textures = true
format = 1
tile_data = PoolIntArray( 1, 16, 0, 2, 16, 0, 3, 16, 0, 4, 16, 0, 5, 16, 0, 6, 16, 0, 7, 16, 0, 8, 16, 0, 9, 16, 0, 10, 16, 0, 11, 16, 0, 12, 16, 0, 13, 16, 0, 14, 16, 0, 15, 16, 0, 16, 16, 0, 65536, 16, 0, 65537, 16, 0, 65538, 16, 0, 65539, 16, 0, 65540, 16, 0, 65541, 16, 0, 65542, 16, 0, 65543, 16, 0, 65544, 16, 0, 65545, 16, 0, 65546, 16, 0, 65547, 16, 0, 65548, 16, 0, 65549, 16, 0, 65550, 16, 0, 65551, 16, 0, 65552, 16, 0, 65553, 16, 0, 65554, 16, 0, 131073, 16, 0, 131074, 16, 0, 131075, 16, 0, 131076, 16, 0, 131077, 16, 0, 131078, 16, 0, 131079, 16, 0, 131080, 16, 0, 131081, 16, 0, 131082, 16, 0, 131083, 16, 0, 131084, 16, 0, 131085, 16, 0, 131086, 16, 0, 131087, 16, 0, 131088, 16, 0, 131089, 16, 0, 131090, 16, 0, 131091, 16, 0, 131092, 16, 0, 131093, 16, 0, 131094, 16, 0, 196608, 16, 0, 196609, 16, 0, 196610, 16, 0, 196611, 16, 0, 196612, 16, 0, 196613, 16, 0, 196614, 16, 0, 196615, 16, 0, 196616, 16, 0, 196617, 6, 0, 196618, 16, 0, 196619, 16, 0, 196620, 16, 0, 196621, 16, 0, 196622, 16, 0, 196623, 2, 0, 196624, 16, 0, 196625, 16, 0, 196626, 16, 0, 196627, 16, 0, 196628, 16, 0, 196629, 16, 0, 196630, 16, 0, 196631, 16, 0, 262145, 16, 0, 262146, 16, 0, 262147, 16, 0, 262148, 16, 0, 262149, 16, 0, 262150, 16, 0, 262151, 16, 0, 262152, 11, 0, 262153, 16, 0, 262154, 16, 0, 262155, 16, 0, 262156, 16, 0, 262157, 16, 0, 262158, 16, 0, 262159, 16, 0, 262160, 16, 0, 262161, 16, 0, 262162, 16, 0, 262163, 16, 0, 262164, 16, 0, 262165, 16, 0, 262166, 16, 0, 262167, 16, 0, 262168, 16, 0, 262169, 16, 0, 327681, 16, 0, 327682, 16, 0, 327683, 16, 0, 327684, 1, 0, 327685, 1, 0, 327686, 16, 0, 327687, 16, 0, 327688, 16, 0, 327689, 16, 0, 327690, 16, 0, 327691, 16, 0, 327692, 16, 0, 327693, 16, 0, 327694, 16, 0, 327695, 16, 0, 327696, 7, 0, 327697, 16, 0, 327698, 16, 0, 327699, 16, 0, 327700, 16, 0, 327701, 16, 0, 327702, 16, 0, 327703, 16, 0, 327704, 16, 0, 393217, 16, 0, 393218, 16, 0, 393219, 16, 0, 393220, 1, 0, 393221, 1, 0, 393222, 16, 0, 393223, 16, 0, 393224, 16, 0, 393225, 16, 0, 393226, 16, 0, 393227, 16, 0, 393228, 3, 0, 393229, 16, 0, 393230, 16, 0, 393231, 16, 0, 393232, 16, 0, 393233, 16, 0, 393234, 16, 0, 393235, 16, 0, 393236, 16, 0, 393237, 16, 0, 393238, 16, 0, 393239, 16, 0, 393240, 16, 0, 393241, 16, 0, 458753, 16, 0, 458754, 16, 0, 458755, 16, 0, 458756, 1, 0, 458757, 16, 0, 458758, 16, 0, 458759, 16, 0, 458760, 16, 0, 458761, 16, 0, 458762, 3, 0, 458763, 5, 0, 458764, 16, 0, 458765, 16, 0, 458766, 16, 0, 458767, 16, 0, 458768, 16, 0, 458769, 16, 0, 458770, 16, 0, 458771, 16, 0, 458772, 16, 0, 458773, 16, 0, 458774, 7, 0, 458775, 16, 0, 458776, 16, 0, 524290, 16, 0, 524291, 16, 0, 524292, 16, 0, 524293, 16, 0, 524294, 16, 0, 524295, 3, 0, 524296, 3, 0, 524297, 5, 0, 524298, 3, 0, 524299, 16, 0, 524300, 2, 0, 524301, 16, 0, 524302, 16, 0, 524303, 16, 0, 524304, 3, 0, 524305, 16, 0, 524306, 1, 0, 524307, 16, 0, 524308, 16, 0, 524309, 16, 0, 524310, 16, 0, 524311, 16, 0, 524312, 16, 0, 524313, 16, 0, 589825, 16, 0, 589826, 16, 0, 589827, 16, 0, 589828, 16, 0, 589829, 16, 0, 589830, 16, 0, 589831, 16, 0, 589832, 16, 0, 589833, 2, 0, 589834, 16, 0, 589835, 5, 0, 589836, 16, 0, 589837, 16, 0, 589838, 15, 0, 589839, 16, 0, 589840, 16, 0, 589841, 16, 0, 589842, 16, 0, 589843, 16, 0, 589844, 16, 0, 589845, 16, 0, 589846, 16, 0, 589847, 16, 0, 589848, 16, 0, 655362, 16, 0, 655363, 16, 0, 655364, 16, 0, 655365, 16, 0, 655366, 16, 0, 655367, 16, 0, 655368, 16, 0, 655369, 16, 0, 655370, 6, 0, 655371, 16, 0, 655372, 16, 0, 655373, 16, 0, 655374, 16, 0, 655375, 16, 0, 655376, 16, 0, 655377, 16, 0, 655378, 16, 0, 655379, 16, 0, 655380, 16, 0, 655381, 16, 0, 655382, 16, 0, 655383, 16, 0, 655384, 16, 0, 720899, 16, 0, 720900, 16, 0, 720901, 16, 0, 720902, 1, 0, 720903, 1, 0, 720904, 16, 0, 720905, 16, 0, 720906, 16, 0, 720907, 16, 0, 720908, 16, 0, 720909, 16, 0, 720910, 16, 0, 720911, 16, 0, 720912, 16, 0, 720913, 16, 0, 720914, 16, 0, 720915, 16, 0, 720916, 16, 0, 720917, 7, 0, 720918, 16, 0, 720919, 16, 0, 720920, 16, 0, 786435, 16, 0, 786436, 16, 0, 786437, 16, 0, 786438, 16, 0, 786439, 16, 0, 786440, 16, 0, 786441, 16, 0, 786442, 16, 0, 786443, 16, 0, 786444, 16, 0, 786445, 16, 0, 786446, 16, 0, 786447, 16, 0, 786448, 6, 0, 786449, 2, 0, 786450, 16, 0, 786451, 16, 0, 786452, 16, 0, 786453, 16, 0, 786454, 16, 0, 786455, 16, 0, 786456, 16, 0, 786457, 16, 0, 851971, 16, 0, 851972, 16, 0, 851973, 16, 0, 851974, 16, 0, 851975, 16, 0, 851976, 16, 0, 851977, 16, 0, 851978, 16, 0, 851979, 16, 0, 851980, 16, 0, 851981, 16, 0, 851982, 16, 0, 851983, 16, 0, 851984, 16, 0, 851985, 16, 0, 851986, 16, 0, 851987, 16, 0, 851988, 16, 0, 851989, 16, 0, 851990, 16, 0, 851991, 16, 0, 851992, 16, 0, 917508, 16, 0, 917515, 16, 0, 917516, 16, 0, 917517, 16, 0, 917518, 16, 0, 917519, 16, 0, 917520, 16, 0, 917521, 16, 0, 917522, 16, 0, 917523, 16, 0, 917524, 16, 0, 917525, 16, 0, 917526, 16, 0, 917527, 16, 0, 917528, 16, 0, 983054, 16, 0, 983055, 16, 0, 983056, 16, 0, 983057, 16, 0, 983058, 16, 0, 983059, 16, 0, 983060, 16, 0, 983061, 16, 0, 983062, 16, 0, 983063, 16, 0, 1048592, 16, 0, 1048593, 16, 0, 1048594, 16, 0, 1048595, 16, 0, 1048596, 16, 0, 1048597, 16, 0, 1048598, 16, 0, 1048599, 16, 0, 1114130, 16, 0, 1114131, 16, 0, 1114132, 16, 0, 1114133, 16, 0 )
script = ExtResource( 2 )
obstacles_ids = PoolIntArray( 3, 5, 1, 15, 11, 6, 7 )

[node name="Player" type="Node" parent="."]
script = ExtResource( 4 )
grid_node_path = NodePath("../Grid")

[node name="Drawer" type="Node2D" parent="."]
script = SubResource( 1 )
grid_path = NodePath("../Grid")
player_path = NodePath("../Player")
units_path = NodePath("../Units")
control_path = NodePath("../Control")

[node name="Control" type="Node" parent="."]
script = SubResource( 2 )

[node name="Units" type="Node2D" parent="."]
script = ExtResource( 3 )
navigation_grid_path = NodePath("../Grid")

[node name="Camera2D" type="Camera2D" parent="."]
current = true
zoom = Vector2( 2, 2 )
smoothing_enabled = true
script = SubResource( 3 )

[connection signal="ready" from="." to="Control" method="_on_Field_ready"]
[connection signal="move_finished" from="Player" to="Control" method="_on_Player_move_finished"]
[connection signal="unit_attacked" from="Player" to="Control" method="_on_Player_unit_attacked"]
[connection signal="unit_out_of_health" from="Units" to="Control" method="_on_Units_unit_out_of_health"]
